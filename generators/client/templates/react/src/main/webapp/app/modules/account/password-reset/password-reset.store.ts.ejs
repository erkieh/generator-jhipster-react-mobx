<%#
 Copyright 2020 Erki Ehtla

 Licensed under the Apache License, Version 2.0 the "License";
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

import { action, observable, makeObservable } from 'mobx';
import axios, { AxiosResponse } from 'axios';
import BaseStore from 'app/shared/util/base-store';
import {IRootStore} from "app/shared/stores";
import { translate } from 'react-jhipster';

const apiUrl = '/api/account/reset-password';

export class PasswordResetStore extends BaseStore {
    public activationSuccess = false;
    public activationFailure = false;
    public successMessage = null;

  handlePasswordResetInit = this.readHandler(this.handlePasswordResetInitGen);

  handlePasswordResetFinish = this.readHandler(this.handlePasswordResetFinishGen);

   constructor(protected rootStore: IRootStore) {
    super(rootStore);

    makeObservable(this, {
      activationSuccess: observable,
      activationFailure: observable,
      successMessage: observable,
      handlePasswordResetInit: action,
      handlePasswordResetFinish: action,
      reset: action.bound,
    });
  }


  reset() {
    this.successMessage = null;
    this.activationSuccess = false;
    this.activationFailure = false;
    this.loading = false;
  }

  *handlePasswordResetInitGen(mail) {
    this.reset();
    try {
      const result: AxiosResponse = yield axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } });
      this.activationSuccess = true;
      <%_ if (enableTranslation) { _%>
      this.successMessage= 'reset.request.messages.success';
      <%_ } else { _%>
      this.successMessage= 'Check your emails for details on how to reset your password.';
      <%_ } _%>
      return result;
    } catch (e) {
      this.activationFailure = true;
      throw e;
    }
  }

  *handlePasswordResetFinishGen({key, newPassword}) {
    this.reset();
    try {
      const result: AxiosResponse = yield axios.post(`${apiUrl}/finish`, { key, newPassword });
      this.activationSuccess = true;
      <%_ if (enableTranslation) { _%>
      this.successMessage = 'reset.finish.messages.success';
      <%_ } else { _%>
      this.successMessage = "Your password couldn't be reset. Remember a password request is only valid for 24 hours.";
      <%_ } _%>
      return result;
    } catch (e) {
      this.activationFailure = true;
      throw e;
    }
  }
}

export default PasswordResetStore;
